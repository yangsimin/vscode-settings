// 将键绑定放在此文件中以覆盖默认值
[
    {
      // 资源管理器：新建文件
      "key": "a",
      "command": "explorer.newFile",
      "when": "filesExplorerFocus && !inputFocus"
    },
    {
      // 资源管理器：新建文件夹
      "key": "shift+a",
      "command": "explorer.newFolder",
      "when": "filesExplorerFocus && !inputFocus"
    },
    {
      // 资源管理器：修改文件名称
      "key": "r",
      "command": "renameFile",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      // 资源管理器：删除文件
      "key": "d",
      "command": "deleteFile",
      "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
      // 资源管理器：折叠文件夹
      "key": "[",
      "command": "workbench.files.action.collapseExplorerFolders",
      "when": "filesExplorerFocus && !inputFocus"
    },
    {
      // 垂直方向，拆分编辑器
      "key": "ctrl+alt+\\",
      "command": "workbench.action.splitEditorUp"
    },
    {
      // window move left
      "key": "shift+left",
      "command": "vim.remap",
      "when": "vim.mode == 'Normal'",
      "args": {
        "after": ["<c-w>", "h"]
      }
    },
    {
      // window move right
      "key": "shift+right",
      "command": "vim.remap",
      "when": "vim.mode == 'Normal'",
      "args": {
        "after": ["<c-w>", "l"]
      }
    },
    {
      // window move down
      "key": "shift+down",
      "command": "vim.remap",
      "when": "vim.mode == 'Normal'",
      "args": {
        "after": ["<c-w>", "j"]
      }
    },
    {
      // window move up
      "key": "shift+up",
      "command": "vim.remap",
      "when": "vim.mode == 'Normal'",
      "args": {
        "after": ["<c-w>", "k"]
      }
    },
    {
      // 切换到资源管理器
      "key": "ctrl+;",
      "command": "workbench.view.explorer"
    },
    {
      // 切换到编辑区
      "key": "ctrl+'",
      "command": "workbench.action.focusFirstEditorGroup"
    },
    {
      // 切换到终端窗口
      "key": "ctrl+t",
      "command": "workbench.action.terminal.toggleTerminal",
      "when": "terminal.active"
    },
    {
      // terminal 切换到下一个窗口
      "key": "alt+]",
      "command": "workbench.action.terminal.focusNextPane",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
      // terminal 切换到上一个窗口
      "key": "alt+[",
      "command": "workbench.action.terminal.focusPreviousPane",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
      "key": "alt+]",
      "command": "workbench.action.terminal.focusNext",
      "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
      "key": "alt+[",
      "command": "workbench.action.terminal.focusPrevious",
      "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
      // terminal 关闭窗口
      "key": "ctrl+w",
      "command": "workbench.action.terminal.kill",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
      // terminal 新建窗口
      "key": "ctrl+n",
      "command": "workbench.action.terminal.new",
      "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
      "key": "ctrl+tab",
      "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
      "when": "!activeEditorGroupEmpty"
    },
    {
      "key": "ctrl+tab",
      "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
      "when": "inEditorsPicker && inQuickOpen"
    },
    {
      "key": "ctrl+oem_1 ctrl+a",
      "command": "-testing.debugAll"
    },
    {
      "key": "ctrl+oem_1 ctrl+e",
      "command": "-testing.debugFailTests"
    },
    {
      "key": "ctrl+oem_1 ctrl+l",
      "command": "-testing.debugLastRun"
    },
    {
      "key": "ctrl+oem_1 ctrl+c",
      "command": "-testing.debugAtCursor",
      "when": "editorTextFocus"
    },
    {
      "key": "ctrl+oem_1 ctrl+f",
      "command": "-testing.debugCurrentFile",
      "when": "editorTextFocus"
    },
    {
      "key": "ctrl+oem_1 ctrl+m",
      "command": "-testing.openOutputPeek"
    },
    {
      "key": "ctrl+oem_1 ctrl+r",
      "command": "-testing.refreshTests",
      "when": "testing.canRefresh"
    },
    {
      "key": "ctrl+oem_1 e",
      "command": "-testing.reRunFailTests"
    },
    {
      "key": "ctrl+oem_1 l",
      "command": "-testing.reRunLastRun"
    },
    {
      "key": "ctrl+oem_1 a",
      "command": "-testing.runAll"
    },
    {
      "key": "ctrl+oem_1 c",
      "command": "-testing.runAtCursor",
      "when": "editorTextFocus"
    },
    {
      "key": "ctrl+oem_1 f",
      "command": "-testing.runCurrentFile",
      "when": "editorTextFocus"
    },
    {
      "key": "ctrl+oem_1 ctrl+o",
      "command": "-testing.showMostRecentOutput",
      "when": "testing.hasAnyResults"
    },
    {
      "key": "ctrl+oem_1 ctrl+i",
      "command": "-testing.toggleInlineTestOutput"
    },
    {
      "key": "ctrl+oem_1 ctrl+x",
      "command": "-testing.cancelRun"
    },
    // ---- nvim keybindings ⬇️
    {
      "key": "space r n",
      "command": "editor.action.rename",
      "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly && neovim.mode != insert"
    },
    { "key": "ctrl+a", "command": "-vscode-neovim.send" },
    { "key": "ctrl+b", "command": "-vscode-neovim.ctrl-b" },
    { "key": "ctrl+c", "command": "-vscode-neovim.escape" },
    { "key": "ctrl+d", "command": "-vscode-neovim.ctrl-d" },
    { "key": "ctrl+f", "command": "-vscode-neovim.ctrl-f" },
    { "key": "ctrl+j", "command": "-vscode-neovim.send" },
    { "key": "ctrl+s", "command": "-vscode-neovim.send" },
    { "key": "ctrl+v", "command": "-vscode-neovim.send" },
    { "key": "ctrl+w", "command": "-vscode-neovim.send" },
    { "key": "ctrl+x", "command": "-vscode-neovim.send" },
    {
      "key": "ctrl+z",
      "command": "-vscode-neovim.send"
    },
    {
      "key": "g c",
      "command": "editor.action.commentLine",
      "when": "editorTextFocus && !editorReadonly && neovim.mode == visual"
    },
    {
      "key": "g c c",
      "command": "editor.action.commentLine",
      "when": "editorTextFocus && !editorReadonly && neovim.mode == normal"
    },
    {
      "key": "g h",
      "command": "editor.action.showHover",
      "when": "editorTextFocus && neovim.mode == normal"
    },
    {
      "key": "g d",
      "command": "editor.action.revealDefinition",
      "when": "editorTextFocus && neovim.mode == normal"
    },
    // ---- nvim keybindings ⬆️
    {
      "key": "ctrl+w l",
      "command": "-workbench.action.navigateRight",
      "when": "!editorTextFocus && !terminalFocus"
    },
    {
      "key": "ctrl+w right",
      "command": "-workbench.action.navigateRight",
      "when": "!editorTextFocus && !terminalFocus"
    },
    {
      "key": "ctrl+w h",
      "command": "-workbench.action.navigateLeft",
      "when": "!editorTextFocus && !terminalFocus"
    },
    {
      "key": "ctrl+w left",
      "command": "-workbench.action.navigateLeft",
      "when": "!editorTextFocus && !terminalFocus"
    },
    {
      "key": "ctrl+w j",
      "command": "-workbench.action.navigateDown",
      "when": "!editorTextFocus && !terminalFocus"
    },
    {
      "key": "ctrl+w down",
      "command": "-workbench.action.navigateDown",
      "when": "!editorTextFocus && !terminalFocus"
    },
    {
      "key": "ctrl+w k",
      "command": "-workbench.action.navigateUp",
      "when": "!editorTextFocus && !terminalFocus"
    },
    {
      "key": "ctrl+w ctrl+w",
      "command": "-workbench.action.focusNextGroup",
      "when": "!editorTextFocus && !filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus"
    },
    {
      "key": "ctrl+w up",
      "command": "-workbench.action.navigateUp",
      "when": "!editorTextFocus && !terminalFocus"
    },
    {
      "key": "ctrl+w ctrl+w",
      "command": "-workbench.action.focusFirstEditorGroup",
      "when": "!editorTextFocus && !filesExplorerFocus && !inSearchEditor && !replaceInputBoxFocus && !searchViewletFocus && !terminalFocus"
    },
    {
      "key": "ctrl+w q",
      "command": "-workbench.action.closeActiveEditor",
      "when": "!editorTextFocus && !filesExplorerFocus && !searchViewletFocus && !terminalFocus"
    },
    {
      "key": "ctrl+d",
      "command": "-vscode-neovim.send",
      "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.mode == 'insert'"
    }
  ]